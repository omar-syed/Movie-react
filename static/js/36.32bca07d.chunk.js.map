{"version":3,"file":"static/js/36.32bca07d.chunk.js","mappings":"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","sources":["components/Home/components/Card/index.js","../node_modules/@mui/material/colors/yellow.js","components/MovieDetail/components/DetailCard/index.js","components/MovieDetail/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { FavoriteBorder, Favorite } from \"@mui/icons-material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { black } from \"@mui/material/colors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addRemoveFavorite } from \"../../../../store/slices/favorite\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./card.css\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n          position: \"absolute\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"button\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Card(props) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const favoriteArray = useSelector((state) => state.favoriteArray);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row row-cols-5 ms-5\">\r\n        {props.movieList.map((movie) => {\r\n          return (\r\n            <div\r\n              className=\"card h-100 col mx-2   gy-3\"\r\n              style={{ width: \"17rem\", cursor: \"pointer\" }}\r\n              onClick={() => navigate(`/movie-detail/${movie.id}`)}\r\n            >\r\n              <img\r\n                src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                className=\"card-img-top rounded position-relative\"\r\n                width={\"25px\"}\r\n                height={\"300px\"}\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"text-start mt-2\">\r\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                  <h6 className=\"card-text fw-bold \" title={movie.title}>\r\n                    {\" \"}\r\n                    {movie.title.length >= 15\r\n                      ? movie.title.slice(0, 15) + \"..\"\r\n                      : movie.title}\r\n                  </h6>{\" \"}\r\n                  <CircularProgressWithLabel value={movie.vote_average * 10} />\r\n                </div>\r\n                <div className=\"d-flex justify-content-between align-items-center \">\r\n                  <div className=\" text-secondary fw-bold\">\r\n                    {movie.release_date}\r\n                  </div>\r\n\r\n                  <div\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      dispatch(addRemoveFavorite(movie));\r\n                    }}\r\n                  >\r\n                    {favoriteArray.some(\r\n                      (favoriteMovie) => favoriteMovie.id === movie.id\r\n                    ) ? (\r\n                      <Favorite\r\n                        sx={{ color: \"black\" }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    ) : (\r\n                      <FavoriteBorder\r\n                        sx={{ color: \"black\"}}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const yellow = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\nexport default yellow;","import React, { useEffect, useState } from \"react\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addRemoveFavorite } from \"../../../../store/slices/favorite\";\r\nimport { yellow } from \"@mui/material/colors\";\r\nexport default function DetailCard() {\r\n  const [movie, setMovie] = useState({});\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const favoriteArray = useSelector((state) => state.favoriteArray);\r\n  const [companyPoster, setCompanyPoster] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${params.id}}`, {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // setMovie(res.data.results);\r\n        setMovie(res.data);\r\n        let companyWithLogo = res.data.production_companies?.find(\r\n          (company) => company.logo_path !== null\r\n        );\r\n        if (companyWithLogo) {\r\n          setCompanyPoster(companyWithLogo.logo_path);\r\n        }\r\n        window.scrollTo(0, 0);\r\n      })\r\n      .catch((err) => {\r\n        navigate(\"/not-found\");\r\n      });\r\n  }, [params.id]);\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"p-4 row row-cols-sm-1 row-cols-lg-2\">\r\n        <div className=\" col-4\">\r\n          <img\r\n            className=\" rounded  \"\r\n            src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n            width={\"400px\"}\r\n            height={\"500px\"}\r\n            alt=\"/\"\r\n          />\r\n        </div>\r\n        <div className=\" col-8 text-start pt-2\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <h1 className=\"fw-bold\">{movie.title}</h1>\r\n            <div\r\n              onClick={(e) => {\r\n                dispatch(addRemoveFavorite(movie));\r\n              }}\r\n            >\r\n              {favoriteArray.some(\r\n                (favoriteMovie) => favoriteMovie.id === movie.id\r\n              ) ? (\r\n                <Favorite\r\n                  sx={{ color: yellow[700] }}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  fontSize=\"large\"\r\n                />\r\n              ) : (\r\n                <FavoriteBorder\r\n                  sx={{ color: yellow[700] }}\r\n                  fontSize=\"large\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <h6 className=\"text-secondary\">{movie.release_date}</h6>\r\n          <div className=\"rating my-3 d-flex flex-inline align-items-center\">\r\n            <h6 className=\"me-3\">\r\n              {movie.vote_average && (\r\n                <Rating\r\n                  name=\"customized-10\"\r\n                  defaultValue={movie.vote_average}\r\n                  max={10}\r\n                  precision={0.5}\r\n                  readOnly\r\n                  sx={{ color: yellow[700] }}\r\n                />\r\n              )}\r\n            </h6>{\" \"}\r\n            <h6>{movie.vote_count}</h6>\r\n          </div>\r\n          <h4 className=\"my-3\">{movie.overview}</h4>\r\n          <div className=\"catg d-flex flex-inline my-4\">\r\n            {movie?.genres?.map((catg) => {\r\n              console.log(movie);\r\n              return (\r\n                <div className=\"bg-warning px-3 py-1 rounded me-2 fs-5 fw-bold\">\r\n                  {\" \"}\r\n                  {catg.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"d-flex flex-inline fs-5 align-items-center\">\r\n            <p className=\"me-4 \">\r\n              <span className=\"fw-bold me-3 \">Duration: </span>\r\n              {movie.runtime} minutes{\" \"}\r\n            </p>\r\n            <p>\r\n              <span className=\"fw-bold me-3\">Languages: </span>\r\n              {movie?.spoken_languages\r\n                ?.map((lang) => lang.english_name)\r\n                .join(\" | \")}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            {companyPoster && (\r\n              <img\r\n                src={`http://image.tmdb.org/t/p/w500${companyPoster}`}\r\n                height={\"75px\"}\r\n                width={\"300px\"}\r\n                alt=\"\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"mt-1 mb-5\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DetailCard from \"./components/DetailCard\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Card from \"../Home/components/Card\";\r\nexport default function MovieDetail() {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${params.id}/recommendations?`, {\r\n        params: {\r\n          api_key: process.env.REACT_APP_API_KEY,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setMovieList(res.data.results.slice(0, 5));\r\n      })\r\n      .catch((err) => {\r\n        navigate(\"/not-found\");\r\n      });\r\n  }, [params.id]);\r\n  return (\r\n    <div className=\"mb-5 bg-black\">\r\n      <DetailCard />\r\n      <h1 className=\" text-start ms-4\">Recommendations</h1>\r\n      <Card movieList={movieList} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["CircularProgressWithLabel","props","_jsxs","Box","sx","position","display","children","_jsx","CircularProgress","_objectSpread","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","fontWeight","concat","Math","round","value","Card","navigate","useNavigate","dispatch","useDispatch","favoriteArray","useSelector","state","_Fragment","className","movieList","map","movie","style","width","cursor","onClick","id","src","poster_path","height","alt","title","length","slice","vote_average","release_date","e","stopPropagation","addRemoveFavorite","some","favoriteMovie","Favorite","color","FavoriteBorder","A100","A200","A400","A700","DetailCard","_movie$genres","_movie$spoken_languag","_useState","useState","_useState2","_slicedToArray","setMovie","params","useParams","_useState3","_useState4","companyPoster","setCompanyPoster","useEffect","axios","get","api_key","process","then","res","_res$data$production_","data","companyWithLogo","production_companies","find","company","logo_path","window","scrollTo","catch","err","yellow","fontSize","Rating","name","defaultValue","max","precision","readOnly","vote_count","overview","genres","catg","console","log","runtime","spoken_languages","lang","english_name","join","MovieDetail","setMovieList","results"],"sourceRoot":""}